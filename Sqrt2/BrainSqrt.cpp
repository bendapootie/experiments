// Program to help generate BrainFuck code that outputs
// the square root of 2 to 1000 decimal places

#include <stdio.h>
#include <string>

std::string CalcDelta(int delta)
{
		std::string w;
		while(delta>0)
		{
			delta--;
			w+="-";
		}
		while(delta<0)
		{
			delta++;
			w+="+";
		}
		return w;
}

int main(int argc, char *argv[])
{
	char* s="1.4142135623730950488016887242096980785696718753769480731766797379907324784621070388503875343276415727350138462309122970249248360558507372126441214970999358314132226659275055927557999505011527820605714701095599716059702745345968620147285174186408891986095523292304843087143214508397626036279952514079896872533965463318088296406206152583523950547457502877599617298355752203375318570113543746034084988471603868999706990048150305440277903164542478230684929369186215805784631115966687130130156185689872372352885092648612494977154218334204285686060146824720771435854874155657069677653720226485447015858801620758474922657226002085584466521458398893944370926591800311388246468157082630100594858704003186480342194897278290641045072636881313739855256117322040245091227700226941127573627280495738108967504018369868368450725799364729060762996941380475654823728997180326802474420629269124859052181004459842150591120249441341728531478105803603371077309182869314710171111683916581726889419758716582152128229518488472";


// Fill data stream with ascii 5 and leave pointer at right
// put aacii 5 in data
printf("++++++[->+++[->+++<]<]>>-");
// 0 0 (53) 0 0 0

// make two copies of 5 but zero out original
printf("[->+>+<<]");
// 0 0 (0) 53 53 0 0 0

// loop 53 times
printf(">[-");
// 0 0 0 (52) 53 0 0

// find next 0 in data
printf("[>]");
// 0 0 0 52 53 (0) 0 0

// copy previous value into two spots
printf("<[->+>+<<]");
// 0 0 0 52 (0) 53 53 0 0 

// copy back to original
printf(">>[-<<+>>]<#");
// 0 0 0 52 53 (53) 0 0

// move data pointer back to loop counter
printf("[<]>");
// 0 0 0 (52) 53 53 0 0

// end of loop
printf("]>");
// 0 0 0 0 (53) 53 53 53 53 53 53 etc 53 53 0 0 0

	char c='5';
	int num_n=0;
	int num_d=0;
	while(*++s)
	{
		std::string w=CalcDelta(*s-c);
		std::string n=">"+CalcDelta(*s-'5');
		c=*s;
		if (w.size()<n.size())
		{
			printf(w.c_str());
			num_d++;
		}
		else
		{
			printf(n.c_str());
			num_n++;
		}
		printf(".");
	}
	printf("%d - %d",num_n, num_d);
}